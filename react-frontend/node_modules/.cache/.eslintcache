[{"/home/luisotaviom/TCC/react-frontend/src/index.js":"1","/home/luisotaviom/TCC/react-frontend/src/App.js":"2","/home/luisotaviom/TCC/react-frontend/src/componentes/ListaBibliotecas.js":"3","/home/luisotaviom/TCC/react-frontend/src/componentes/Livro.js":"4","/home/luisotaviom/TCC/react-frontend/src/componentes/NovoLivro.js":"5","/home/luisotaviom/TCC/react-frontend/src/componentes/NovaBiblioteca.js":"6","/home/luisotaviom/TCC/react-frontend/src/componentes/ListaLivrosNaBiblioteca.js":"7","/home/luisotaviom/TCC/react-frontend/src/componentes/ListaLivros.js":"8","/home/luisotaviom/TCC/react-frontend/src/componentes/ListaBibliotecaGerency.js":"9","/home/luisotaviom/TCC/react-frontend/src/componentes/Vinculo.js":"10","/home/luisotaviom/TCC/react-frontend/src/componentes/Biblioteca.js":"11","/home/luisotaviom/TCC/react-frontend/src/services/GerencyService2.js":"12","/home/luisotaviom/TCC/react-frontend/src/services/GerencyService4.js":"13","/home/luisotaviom/TCC/react-frontend/src/services/GerencyService5.js":"14","/home/luisotaviom/TCC/react-frontend/src/services/GerencyService3.js":"15","/home/luisotaviom/TCC/react-frontend/src/services/GerencyService.js":"16","/home/luisotaviom/TCC/react-frontend/src/http-common.js":"17"},{"size":416,"mtime":1699562329000,"results":"18","hashOfConfig":"19"},{"size":2405,"mtime":1705011443702,"results":"20","hashOfConfig":"19"},{"size":6239,"mtime":1705011273240,"results":"21","hashOfConfig":"19"},{"size":3300,"mtime":1701354351000,"results":"22","hashOfConfig":"19"},{"size":3902,"mtime":1701223674000,"results":"23","hashOfConfig":"19"},{"size":1997,"mtime":1701223750000,"results":"24","hashOfConfig":"19"},{"size":4914,"mtime":1705012964420,"results":"25","hashOfConfig":"19"},{"size":5888,"mtime":1705010795258,"results":"26","hashOfConfig":"19"},{"size":5729,"mtime":1701361357000,"results":"27","hashOfConfig":"19"},{"size":2632,"mtime":1701354788000,"results":"28","hashOfConfig":"19"},{"size":2182,"mtime":1701354377000,"results":"29","hashOfConfig":"19"},{"size":533,"mtime":1705006929933,"results":"30","hashOfConfig":"19"},{"size":493,"mtime":1701124272000,"results":"31","hashOfConfig":"19"},{"size":347,"mtime":1705011657919,"results":"32","hashOfConfig":"19"},{"size":598,"mtime":1701356074000,"results":"33","hashOfConfig":"19"},{"size":502,"mtime":1705006914701,"results":"34","hashOfConfig":"19"},{"size":153,"mtime":1699558792000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"vmxqnz",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/luisotaviom/TCC/react-frontend/src/index.js",[],[],[],"/home/luisotaviom/TCC/react-frontend/src/App.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/componentes/ListaBibliotecas.js",["90"],[],"import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport BibliotecaDataService from \"../services/GerencyService2\";\nimport { useTable } from \"react-table\";\n\nconst ListaDeBibliotecas = (props) => {\n  /**\n   * useState é um Hook do React que permite adicionar estado a componentes de função. \n   * Neste caso, useState([]) inicializa um estado chamado \"users\" com um valor inicial de um array vazio []. \n   * O array vazio é passado como um valor inicial para o estado.\n   */\n  const [bibliotecas, definirBiblio] = useState([]);\n  const biblioRef = useRef();\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n  const [pageSize, setPageSize] = useState(4);\n  const pageSizes = [4, 8, 12];\n\n  biblioRef.current = bibliotecas;\n\n  const buscarVariaveisDePaginacao = (page, pageSize) => {\n    let params = {};\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    return params;\n  };\n\n  const buscarBiblios = () => {\n    const params = buscarVariaveisDePaginacao(page, pageSize);\n\n    BibliotecaDataService.getAll2(params)\n      .then((response) => {\n        console.log(response)\n        const bibliotecas = response.data.content;\n        const totalPages = response.data.totalPages;\n\n        definirBiblio(bibliotecas);\n        setCount(totalPages);\n\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const openBiblio = (rowIndex) => {\n    const id = biblioRef.current[rowIndex].id;\n\n    props.history.push(\"/Bibliotecas/\" + id);\n  };\n\n  const openBiblioLivros = (rowIndex) => {\n    const id = biblioRef.current[rowIndex].id;\n\n    props.history.push(\"/Gerency/ProdutosDoFornecedor/\" + id);\n  };\n\n\n  const deleteBiblio = (rowIndex) => {\n    const id = biblioRef.current[rowIndex].id;\n\n    BibliotecaDataService.remove2(id)\n      .then((response) => {\n        props.history.push(\"/Bibliotecas\");\n\n        let novasBiblios= [...biblioRef.current];\n        novasBiblios.splice(rowIndex, 1);\n\n        definirBiblio(novasBiblios);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(buscarBiblios, [page, pageSize]);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handlePageSizeChange = (event) => {\n    setPageSize(event.target.value);\n    setPage(1);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Nome\",\n        accessor: \"nome\",\n      },\n      {\n        Header: \"Cidade\",\n        accessor: \"cidade\",\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"Celular\",\n        accessor: \"celular\",\n      },\n      {\n        Header: \"Ações\",\n        accessor: \"actions\",\n        Cell: (props) => {\n          const rowIdx = props.row.id;\n\n          return (\n            <div>\n              <span onClick={() => openBiblio(rowIdx)}>\n                <button type=\"button\" className=\"btn btn-warning btn-sm\">Editar</button>\n              </span>\n              &nbsp;\n              <span onClick={() => deleteBiblio(rowIdx)}>\n                <button type=\"button\" className=\"btn btn-danger btn-sm\">Remover</button>\n              </span>\n              &nbsp;\n              <span onClick={() => openBiblioLivros(rowIdx)}>\n                <button type=\"button\" className=\"btn btn-success btn-sm\">Ver produtos</button>\n              </span>\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data: bibliotecas,\n  });\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-12 list\">\n        <div className=\"mt-3\">\n          {\"Itens por página: \"}\n          <select onChange={handlePageSizeChange} value={pageSize}>\n            {pageSizes.map((size) => (\n              <option key={size} value={size}>\n                {size}\n              </option>\n            ))}\n          </select>\n\n          <Pagination\n            color=\"primary\"\n            className=\"my-3\"\n            count={count}\n            page={page}\n            siblingCount={1}\n            boundaryCount={1}\n            variant=\"outlined\"\n            onChange={handlePageChange}\n          />\n        </div>\n\n        <table\n          className=\"table table-striped table-bordered\"\n          {...getTableProps()}\n        >\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n\n\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <div className=\"mt-3\">\n          {\"Itens por página: \"}\n          <select onChange={handlePageSizeChange} value={pageSize}>\n            {pageSizes.map((size) => (\n              <option key={size} value={size}>\n                {size}\n              </option>\n            ))}\n          </select>\n          <div className=\"mt-3\">\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => props.history.push(\"/NovaBiblioteca\")}>\n            Adicionar fornecedor\n            </button>\n          </div>\n\n          <Pagination\n            color=\"primary\"\n            className=\"my-3\"\n            count={count}\n            page={page}\n            siblingCount={1}\n            boundaryCount={1}\n            variant=\"outlined\"\n            onChange={handlePageChange}\n          />\n        </div>\n        \n\n\n      </div>\n    </div>\n  );\n};\n\nexport default ListaDeBibliotecas;\n","/home/luisotaviom/TCC/react-frontend/src/componentes/Livro.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/componentes/NovoLivro.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/componentes/NovaBiblioteca.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/componentes/ListaLivrosNaBiblioteca.js",["91"],[],"/home/luisotaviom/TCC/react-frontend/src/componentes/ListaLivros.js",["92"],[],"import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport LivroDataService from \"../services/GerencyService\";\nimport { useTable } from \"react-table\";\n\nconst ListaDeLivros = (props) => {\n  /**\n   * useState é um Hook do React que permite adicionar estado a componentes de função. \n   * Neste caso, useState([]) inicializa um estado chamado \"users\" com um valor inicial de um array vazio []. \n   * O array vazio é passado como um valor inicial para o estado.\n   */\n  const [livros, definirLivro] = useState([]);\n  const livroRef = useRef();\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n  const [pageSize, setPageSize] = useState(4);\n  const pageSizes = [4, 8, 12];\n\n  livroRef.current = livros;\n\n  const buscarVariaveisDePaginacao = (page, pageSize) => {\n    let params = {};\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    return params;\n  };\n\n  const buscarLivros = () => {\n    const params = buscarVariaveisDePaginacao(page, pageSize);\n\n    LivroDataService.getAll(params)\n      .then((response) => {\n        console.log(response)\n        const livros = response.data.content;\n        const totalPages = response.data.totalPages;\n\n        definirLivro(livros);\n        setCount(totalPages);\n\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(buscarLivros, [page, pageSize]);\n\n  const openLivro = (rowIndex) => {\n    const id = livroRef.current[rowIndex].id;\n\n    props.history.push(\"/Livros/\" + id);\n  };\n\n\n  const deleteLivro = (rowIndex) => {\n    const id = livroRef.current[rowIndex].id;\n\n    LivroDataService.remove(id)\n      .then((response) => {\n        props.history.push(\"/Livros\");\n\n        let novosLivros = [...livroRef.current];\n        novosLivros.splice(rowIndex, 1);\n\n        definirLivro(novosLivros);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handlePageSizeChange = (event) => {\n    setPageSize(event.target.value);\n    setPage(1);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Nome\",\n        accessor: \"nome\",\n      },\n      {\n        Header: \"Marca\",\n        accessor: \"marca\",\n      },\n      {\n        Header: \"Peso\",\n        accessor: \"peso\",\n      },\n      {\n        Header: \"Preco custo\",\n        accessor: \"preco_custo\",\n      },\n      {\n        Header: \"Preco venda\",\n        accessor: \"preco_venda\",\n      },\n      {\n        Header: \"Ações\",\n        accessor: \"actions\",\n        Cell: (props) => {\n          const rowIdx = props.row.id;\n          return (\n            \n            <div>\n              <span onClick={() => openLivro(rowIdx)}>\n                <button type=\"button\" className=\"btn btn-warning btn-sm\">Editar</button>\n              </span>\n              &nbsp;\n              <span onClick={() => deleteLivro(rowIdx)}>\n                <button type=\"button\" className=\"btn btn-danger btn-sm\">Remover</button>\n              </span>\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data: livros,\n  });\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-12 list\">\n        <div className=\"mt-3\">\n          {\"Itens por página: \"}\n          <select onChange={handlePageSizeChange} value={pageSize}>\n            {pageSizes.map((size) => (\n              <option key={size} value={size}>\n                {size}\n              </option>\n            ))}\n          </select>\n\n          <Pagination\n            color=\"primary\"\n            className=\"my-3\"\n            count={count}\n            page={page}\n            siblingCount={1}\n            boundaryCount={1}\n            variant=\"outlined\"\n            onChange={handlePageChange}\n          />\n        </div>\n\n        <table\n          className=\"table table-striped table-bordered\"\n          {...getTableProps()}\n        >\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n\n\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <div className=\"mt-3\">\n          {\"Itens por página: \"}\n          <select onChange={handlePageSizeChange} value={pageSize}>\n            {pageSizes.map((size) => (\n              <option key={size} value={size}>\n                {size}\n              </option>\n            ))}\n          </select>\n          <div className=\"mt-3\">\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => props.history.push(\"/NovoLivro\")}>\n            Adicionar Livro\n            </button>\n          </div>\n\n          <Pagination\n            color=\"primary\"\n            className=\"my-3\"\n            count={count}\n            page={page}\n            siblingCount={1}\n            boundaryCount={1}\n            variant=\"outlined\"\n            onChange={handlePageChange}\n          />\n        </div>\n        \n\n\n      </div>\n    </div>\n  );\n};\n\nexport default ListaDeLivros;\n","/home/luisotaviom/TCC/react-frontend/src/componentes/ListaBibliotecaGerency.js",["93"],[],"/home/luisotaviom/TCC/react-frontend/src/componentes/Vinculo.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/componentes/Biblioteca.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/services/GerencyService2.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/services/GerencyService4.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/services/GerencyService5.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/services/GerencyService3.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/services/GerencyService.js",[],[],"/home/luisotaviom/TCC/react-frontend/src/http-common.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":137,"column":5,"nodeType":"96","endLine":137,"endColumn":7,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":55,"column":36,"nodeType":"96","endLine":55,"endColumn":52,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":132,"column":5,"nodeType":"96","endLine":132,"endColumn":7,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":112,"column":5,"nodeType":"96","endLine":112,"endColumn":7,"suggestions":"103"},"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'deleteBiblio', 'openBiblio', and 'openBiblioLivros'. Either include them or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.",["105"],"React Hook useMemo has missing dependencies: 'deleteLivro' and 'openLivro'. Either include them or remove the dependency array.",["106"],"React Hook useMemo has a missing dependency: 'deleteBibliotecaGerency'. Either include it or remove the dependency array.",["107"],{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [deleteBiblio, openBiblio, openBiblioLivros]",{"range":"116","text":"117"},"Update the dependencies array to be: [page, pageSize, props.match.params]",{"range":"118","text":"119"},"Update the dependencies array to be: [deleteLivro, openLivro]",{"range":"120","text":"121"},"Update the dependencies array to be: [deleteBibliotecaGerency]",{"range":"122","text":"123"},[3547,3549],"[deleteBiblio, openBiblio, openBiblioLivros]",[1722,1738],"[page, pageSize, props.match.params]",[3216,3218],"[deleteLivro, openLivro]",[3029,3031],"[deleteBibliotecaGerency]"]